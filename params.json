{
  "name": "Vanilla",
  "tagline": "An OpenResty Lua MVC Web Framework",
  "body": "## Vanilla / (香草[中文文档](README-zh.md)) / OSC [Git](http://git.oschina.net/idevz/vanilla)\r\n\r\n[![https://travis-ci.org/idevz/vanilla.svg?branch=master](https://travis-ci.org/idevz/vanilla.svg?branch=master)](https://travis-ci.org/idevz/vanilla)\r\n[![Join the chat at https://gitter.im/idevz/vanilla](https://badges.gitter.im/idevz/vanilla.svg)](https://gitter.im/idevz/vanilla?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![Issue Stats](http://issuestats.com/github/idevz/vanilla/badge/pr)](http://issuestats.com/github/idevz/vanilla)\r\n[![Issue Stats](http://issuestats.com/github/idevz/vanilla/badge/issue)](http://issuestats.com/github/idevz/vanilla)\r\n\r\n*Vanilla is An OpenResty Lua MVC Web Framework.*\r\n\r\n![Vanilla](http://m1.sinaimg.cn/maxwidth.300/m1.sinaimg.cn/120d7329960e19cf073f264751e8d959_2043_2241.png)\r\n\r\n### *MailList*\r\n- vanilla-en <vanilla-en@googlegroups.com>\r\n- vanilla-devel <vanilla-devel@googlegroups.com>\r\n- vanilla中文邮件列表 <vanilla@googlegroups.com>\r\n\r\n### *Install*\r\n\r\n####*Vanilla-V0.1.0-rc4.1 Or the older Vanillas Installation to see: [README-V0.1.0-rc4.1.md](README/README-V0.1.0-rc4.1.md)*\r\n\r\n#### *Use ./setup-framework Install Vanilla*\r\n\r\n*`./setup-framework` is a auto script to `make install` Vanilla, only need to set OpenResty install path to install Vanilla in a simple way*\r\n\r\n```\r\n./setup-framework -h\r\nUsage: ./setup-framework\r\n                 -h   show this help info\r\n                 -v   VANILLA_PROJ_ROOT, vanilla project root, will contain vanilla framework and apps\r\n                 -o   OPENRESTY_ROOT, openresty install path(openresty root)\r\n```\r\n\r\nOptions of `./setup-framework`:\r\n\r\n- -v : Set Vanilla project root, Default is `/data/vanilla`, So Vanilla installed at `/data/vanilla/framework/0_1_0_rc5/vanilla/` directory.\r\n\r\n- -o : Set OpenResty install path, Default is `/usr/local/openresty`, if its different from your OpenResty install path,set to yours.\r\n\r\nHere is the Directory Structure:\r\n\r\n```\r\ntree /data/vanilla -L 2\r\n/data/vanilla\r\n├── framework\r\n│   ├── 0_1_0_rc5\r\n│   └── 0_1_0_rc5.old_2016_04_12_11_04_18 # Repeat the installation will mv the older one to an time backup.\r\n```\r\n\r\n#### *Use ```make install``` cmd to install Vanilla*\r\n\r\n*Vanilla support many configuration options, many of those option have default value.*\r\n\r\nYou can use default installation but if your enviroment values different from which vanilla default, please config it with yours.\r\nEspecially the ```--openresty-path``` option. you should make sure it's point to your turely OpenResty install path.\r\nYou can run command ```./configure --help``` to learn how to use those options. \r\n\r\nBelow is the installation of a simple example:\r\n\r\n```\r\n./configure --prefix=/usr/local/vanilla --openresty-path=/usr/local/openresty\r\n\r\nmake install\r\n```\r\n\r\n\r\n### Vanilla usage\r\n\r\n####*Vanilla-V0.1.0-rc4.1 Or the older Vanillas Installation to see: [README-zh-V0.1.0-rc4.1.md](README/README-zh-V0.1.0-rc4.1.md)*\r\n\r\n#### *Vanilla CMDs*\r\n\r\n*Vanilla-V0.1.0-rc5 always support two cmds, but from rc5, each cmd just like the framework itselvese generate with an  version number like ```vanilla-0.1.0.rc5```, and ```v-console-0.1.0.rc5```, this is good for muilt version vanilla coexistence and painless upgrade Vanilla.*\r\n- ```vanilla-0.1.0.rc5``` use to init an app skeleton, after `vanilla-0.1.0.rc5` we use an script in the app root named `va-appname-service` to manage the app service but not `vanilla-0.1.0.rc5` cmd,  see below for the use details of script `va-appname-service`.\r\n- ```v-console-0.1.0.rc5``` is an interactive command line, its mainly to provide a convenient learning Lua tools with many building Vanilla libs just like lprint_r fuction to output and table.\r\n\r\n#### *Building up an application skeleton*\r\n```\r\nvanilla-0.1.0.rc5 new app_full_path\t\t\t\t\t\t\t#use cmd `vanilla-0.1.0.rc5` to auto create an app skeleton, Attention to give an full path as an param, but not just an APP_NAME\r\nchmod +x app_full_path/va-appname-service\t\t\t\t\t#add an execute permissions to va-appname-service\r\napp_full_path/va-appname-service initconf [dev]\t\t\t\t#init the nginx config for the app, the nginx config file base on the config file in app_full_path/nginx_conf, if you have any personal configration, you should add thire into those config files first, then you can execute the initconf action, param [dev] is an optional one, add this for development environment, default empty for production environment.\r\napp_full_path/va-appname-service start [dev]\t\t\t\t#start this inited service, then you can visit it through http://localhost, it also have a [dev] option just like initconf.\r\n```\r\nThese multi process can be simply completed through script `./setup-vanilal-demoapp`:\r\n```\r\n./setup-vanilal-demoapp -h\r\nUsage: ./setup-vanilal-demoapp -h   show this help info\r\n                 -a   VANILLA_APP_ROOT, app absolute path(which path to init app)\r\n                 -u   VANILLA_APP_USER, user to run app\r\n                 -g   VANILLA_APP_GROUP, user group to run app\r\n                 -e   VANILLA_RUNNING_ENV, app running environment\r\n```\r\nOptions of `./setup-vanilal-demoapp`\r\n- -a : Set a abslute full path for Application, Default is `/data/vanilla/vademo`\r\n- -u : Set the username to run nginx service, Default is idevz\r\n- -g : Set the usergroup to run nginx service, Default is sina\r\n- -e : Set the running enviroment, Default is '' for production environment.\r\n\r\nHere is the Directory Structure:\r\n\r\n```\r\ntree /data/vanilla/ -L 1\r\n/data/vanilla/\r\n├── framework \t\t\t\t\t\t\t# vanilla framework path\r\n├── vademo \t\t\t\t\t\t\t\t# demo app \"vademo\" path\r\n└── vademo.old_2016_04_12_11_04_26 \t\t# Repeat the installation will mv the older one to an time backup.\r\n```\r\n\r\n#### *Application init and service management*\r\n*We use script `/data/vanilla/vademo/va-vademo-service` to manage the vademo service*\r\n\r\n```\r\n/data/vanilla/vademo/va-vademo-service -h\r\nUsage: ./va-ok-service {start|stop|restart|reload|force-reload|confinit[-f]|configtest} [dev] #dev set up the running environment, none dev for default production envionment.\r\n```\r\n\r\nTips:* You should run cmd `/data/vanilla/vademo/va-vademo-service initconf [dev]` first if you new the App didn't use the `/data/vanilla/vademo/va-vademo-service` script but run cmd `vanilla-0.1.0.rc5 new vademo` to new an app by hand.*\r\n\r\n#### *Directory Structure*\r\n```\r\n /Users/zj-git/app_name/ tree ./\r\n./\r\n├── application\r\n│   ├── bootstrap.lua --application boot\r\n│   ├── controllers\r\n│   │   ├── error.lua --application error handling, dealing with corresponding business under this path error\r\n│   │   └── index.lua --vanilla hello world\r\n│   ├── library       --local libs\r\n│   ├── models \r\n│   │   ├── dao       --data handles for DB, APIs\r\n│   │   │   └── table.lua\r\n│   │   └── service   --encapsulations of DAOs\r\n│   │       └── user.lua\r\n│   ├── nginx         --openresy http phases\r\n│   │   └── init.lua  --init_by_lua demo\r\n│   ├── plugins\r\n│   └── views         --one to one correspondence to controllers\r\n│       ├── error     --error handle view layout\r\n│       │   └── error.html\r\n│       └── index     --index controller views\r\n│           └── index.html\r\n├── config\r\n│   ├── application.lua --app basic configuration such as router,initialization settings...\r\n│   ├── errors.lua    --app error conf\r\n│   ├── nginx.conf    --nginx.conf skeleton\r\n│   ├── nginx.lua     --nginx settings like lua_code_cache.\r\n│   ├── waf-regs      --WAF rules\r\n│   │   ├── args\r\n│   │   ├── cookie\r\n│   │   ├── post\r\n│   │   ├── url\r\n│   │   ├── user-agent\r\n│   │   └── whiteurl\r\n│   └── waf.lua       --app WAF config\r\n├── logs\r\n│   └── hack          --attack logs, keep path can be write\r\n├── pub               --app content_by_lua_file path\r\n    └── index.lua     --entrance file\r\n```\r\n#### *IndexController Demo*\r\n```\r\nlocal IndexController = {}\r\n\r\nfunction IndexController:index()\r\n    local view = self:getView()\r\n    local p = {}\r\n    p['vanilla'] = 'Welcome To Vanilla...'\r\n    p['zhoujing'] = 'Power by Openresty'\r\n    view:assign(p)\r\n    return view:display()\r\nend\r\n\r\nreturn IndexController\r\n```\r\n##### *Template demo (views/index/index.html)*\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<body>\r\n  <img src=\"http://m1.sinaimg.cn/maxwidth.300/m1.sinaimg.cn/120d7329960e19cf073f264751e8d959_2043_2241.png\">\r\n  <h1><a href = 'https://github.com/idevz/vanilla'>{{vanilla}}</a></h1><h5>{{zhoujing}}</h5>\r\n</body>\r\n</html>\r\n```\r\n\r\n### Why Vanilla\r\n*To answer this question, we just need to see what Openresty has done and Vanilla has done.*\r\n#### *Openresty*\r\n- Provides processing HTTP requests a full set of the overall solution\r\n- Opened up a new way for Nginx module development, we can use Lua to deal with Web requests\r\n- Formed an increasingly perfect ecology, the ecological covers all aspects of high-performance Web services \r\n\r\n#### *Vanilla*\r\n- Implement a Web development routine debugging, error handling, exception handling\r\n- Implement complete processing of the request and plug-in mechanism, support routing protocol, the template engine configuration\r\n- Integration, encapsulates a series of Web development commonly used tool set, class library (cookies, application firewall, etc.)\r\n- Features easy to use and extend\r\n- Support  different environment (development, test, online)\r\n- Focus on the business development, not any about nginx nor OpenResty\r\n- Based on OpenResty, have all the good qualities of OpenResty\r\n- Automated, Nginx instruction set of configuration management\r\n- More reasonable use Openresty encapsulation of request processing Phase\r\n\r\n### Community\r\n#### *QQ Groups&&WeChat public no.*\r\n- *Openresty/Vanilla Dev:205773855 (Vanilla panel discussion related topics)*\r\n- *Openresty:34782325(Discuss OpenResty and all kinds of advanced technology)*\r\n- *WeChat public no. of Vanilla Dev:Vanilla-OpenResty(Vanilla related information, document push)*\r\n\r\n\r\n[![QQ](http://pub.idqqimg.com/wpa/images/group.png)](http://shang.qq.com/wpa/qunwpa?idkey=673157ee0f0207ce2fb305d15999225c5aa967e88913dfd651a8cf59e18fd459)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}