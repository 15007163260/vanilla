#!/bin/bash

VANILLA_VERSION=0.1.0.rc5
VANILLA_VERSION_DIR_STR=0_1_0_rc5
VANILLA_APP_USER=idevz
VANILLA_APP_GROUP=sina
VANILLA_RUNNING_ENV=''
OPENRESTY_ROOT=/usr/local/openresty

install_vanilla_framework()
{
    echo -e "\033[45mBegin install Vanilla Frameowrk! \033[0m\n"
    VANILLA_PROJ_ROOT=$1
    VANILLA_FRAMEWORK_ROOT=$1/framework
    [ -n $2 ] && OPENRESTY_ROOT=$2
    VANILLA_BIN=/usr/local/bin/vanilla-$VANILLA_VERSION
    VANILLA_CONSOLE_BIN=/usr/local/bin/v-console-$VANILLA_VERSION

    [ -f $VANILLA_BIN ] && rm -f $VANILLA_BIN
    [ -f $VANILLA_CONSOLE_BIN ] && rm -f $VANILLA_CONSOLE_BIN
    [ -d $VANILLA_FRAMEWORK_ROOT ] && rm -rf $VANILLA_FRAMEWORK_ROOT

    make clean
    ./configure --prefix=$VANILLA_FRAMEWORK_ROOT --openresty-path=$OPENRESTY_ROOT
    make install

    echo -e "\033[35mVanilla Frameowrk Installed $VANILLA_FRAMEWORK_ROOT \033[0m\n"
}

init_vanilla_app()
{
    VANILLA_APP_ROOT=$1
    echo -e "\033[40mBegin init Vanilla App: $VANILLA_APP_ROOT \033[0m\n"
    [ -n $2 ] && VANILLA_APP_USER=$2
    [ -n $3 ] && VANILLA_APP_GROUP=$3
    [ -n $4 ] && VANILLA_RUNNING_ENV=$4
    APP_NAME=`basename $VANILLA_APP_ROOT`
    SERVICE_SH=$VANILLA_APP_ROOT/va-$APP_NAME-service
    [ -d $VANILLA_APP_ROOT ] && rm -rf $VANILLA_APP_ROOT
    [ -x /usr/local/bin/vanilla-$VANILLA_VERSION ] && /usr/local/bin/vanilla-$VANILLA_VERSION new $VANILLA_APP_ROOT
    sed "s/#user zhoujing staff/user $VANILLA_APP_USER $VANILLA_APP_GROUP/" $VANILLA_APP_ROOT/nginx_conf/va-nginx-development.conf>$VANILLA_APP_ROOT/nginx_conf/va-nginx-development.conf.tmp
    mv -f $VANILLA_APP_ROOT/nginx_conf/va-nginx-development.conf.tmp $VANILLA_APP_ROOT/nginx_conf/va-nginx-development.conf
    chmod +x $SERVICE_SH
    sudo $SERVICE_SH initconf $VANILLA_RUNNING_ENV
    sudo $SERVICE_SH start $VANILLA_RUNNING_ENV
    sudo $SERVICE_SH restart $VANILLA_RUNNING_ENV
    echo -e "\033[40mVanilla App: $APP_NAME is running \033[0m\n"
}

show_usage()
{
    echo -e "`printf %-16s "Usage: $0"` -h   show this help info"
    echo -e "`printf %-16s ` -v   vanilla project root, will contain vanilla framework and apps"
    echo -e "`printf %-16s ` -o   openresty install path(openresty root)"
    echo -e "`printf %-16s ` -a   app absolute path(which path to init app)"
    echo -e "`printf %-16s ` -u   user to run app"
    echo -e "`printf %-16s ` -g   user group to run app"
    echo -e "`printf %-16s ` -e   app running environment"
}

while getopts v:o:a:u:g:eh OPT; do
    case "$OPT" in
        v )
            VANILLA_PROJ_ROOT=$OPTARG
            ;;
        o )
            OPENRESTY_ROOT=$OPTARG
            ;;
        a )
            VANILLA_APP_ROOT=$OPTARG
            ;;
        u )
            VANILLA_APP_USER=$OPTARG
            ;;
        g )
            VANILLA_APP_GROUP=$OPTARG
            ;;
        e )
            VANILLA_RUNNING_ENV=$OPTARG
            ;;
        h )
            show_usage && exit 0
            ;;
        -- )
            shift break
            ;;
        ? )
            echo -e "\033[31mERROR: unknown argument! \033[0m\n" && show_usage && exit 1
            ;;
    esac
done

echo $VANILLA_PROJ_ROOT
[ -n "$VANILLA_PROJ_ROOT" ] && install_vanilla_framework $VANILLA_PROJ_ROOT $OPENRESTY_ROOT

[ -n "$VANILLA_APP_ROOT" ] && init_vanilla_app $VANILLA_APP_ROOT $VANILLA_APP_USER $VANILLA_APP_GROUP $VANILLA_RUNNING_ENV

echo
echo "You are setup Vanilla-$VANILLA_VERSION and using:"
echo -e "`printf %-36s "\"$VANILLA_RUNNING_ENV\""` ---- as vanilla app running environment"
echo -e "`printf %-36s "\"$OPENRESTY_ROOT\""` ---- as OpenResty install path(OpenResty root)"
echo -e "`printf %-36s "\"$VANILLA_PROJ_ROOT\""` ---- as vanilla project root(will contain vanilla framework and apps)"
echo -e "`printf %-36s "\"$VANILLA_APP_USER\""` ---- as vanilla app nginx user"
echo -e "`printf %-36s "\"$VANILLA_APP_GROUP\""` ---- as vanilla app nginx group"
echo -e "`printf %-36s "\"$VANILLA_APP_ROOT\""` ---- as vanilla app root"
echo

exit 0